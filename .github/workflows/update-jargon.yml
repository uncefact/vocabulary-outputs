name: Update Jargon vocabulary files

on:
  workflow_call:
    inputs:
      vocabulary_name:
        description: 'Vocabulary name'
        type: string
        required: true
      branch_name:
        description: 'Branch name'
        type: string
        required: false
      pull_request_url:
        description: 'Pull request URL'
        type: string
        required: false
      release_url:
        description: 'Release HTML URL'
        type: string
        required: false
      release_version:
        description: 'Release version'
        type: string
        required: false

env:
  # Setting an environment variable with the value of a configuration variable
  utility_jar: vocab-jsonld-utility-${{ vars.VOCAB_JSONLD_UTILITY_VERSION }}.jar

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: uncefact/vocabulary-outputs
        ref: jargon-pages

    - name: Checkout Vocab repo
      if: ${{ inputs.branch_name != '' }}
      uses: actions/checkout@v3
      with:
        repository: "uncefact/vocab-${{ inputs.vocabulary_name }}"
        ref: "${{ inputs.branch_name }}"
        path: "vocab-${{ inputs.vocabulary_name }}"

    - id: move-merged-vocabulary
      if: ${{ inputs.branch_name != '' }}
      run: |
        mv vocab-${{ inputs.vocabulary_name }}/vocab/merged.jsonld .
        rm -rf "vocab-${{ inputs.vocabulary_name }}"

    - id: download-merged-vocabulary
      if: ${{ inputs.branch_name == '' }}
      uses: robinraju/release-downloader@v1.8
      with:
        repository: "uncefact/vocab-${{ inputs.vocabulary_name }}"
        latest: true
        fileName: "merged.jsonld"
        out-file-path: ""
        tarBall: false
        zipBall: false
        extract: false
    - id: download-md-utility
      uses: robinraju/release-downloader@v1.8
      with:
        repository: "uncefact/utilities"
        latest: true
        fileName: "${{ env.utility_jar }}"
        tarBall: false
        zipBall: false
        extract: false
    - run: |
        rm -rf _classes
        rm -rf _properties
        rm -rf _code-lists
        mv _data/mapping.json .
        mv _data/*.csv .
        rm -rf _data
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - run: java -jar ${{ env.utility_jar }} -m "md"
    - run: |
        mv mapping.json _data/
        mv *.csv _data/
        mv merged.jsonld unece.jsonld
    - run: | 
        sed '$ s/.$//' batch-add.json | cut -c 10- > batch-add-fixed.json
        mv batch-add-fixed.json batch-add.json
    - run: | 
        sed '$ s/.$//' batch-delete.json | cut -c 10- > batch-delete-fixed.json
        mv batch-delete-fixed.json batch-delete.json
    - name: Generate a token
      id: generate_token
      uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key:
          ${{ secrets.APP_PRIVATE_KEY }}

    - name: Split PR number
      if: ${{ inputs.pull_request_url != '' }}
      env:
        PR_URL: ${{ inputs.pull_request_url }}
      id: split
      run: echo "::set-output name=pr::${PR_URL##*github.com/}"

    - name: snapshot PR
      if: ${{ inputs.branch_name != '' }}
      uses: peter-evans/create-pull-request@v5
      with:
        commit-message: "chore: vocab-${{ inputs.vocabulary_name }} snapshot update"
        token: ${{ steps.generate_token.outputs.token }}
        delete-branch: true
        title: 'chore: Vocabulary vocab-${{ inputs.vocabulary_name }} snapshot update'
        body: |
          Vocabulary update due to vocab-${{ inputs.vocabulary_name }} snapshot update. 
          Corresponding PR - ${{ inputs.pull_request_url }}
        base: 'jargon-pages'
        branch: ${{ steps.split.outputs.pr }}
        draft: true

    - name: release PR
      if: ${{ inputs.branch_name == '' }}
      uses: peter-evans/create-pull-request@v5
      with:
        commit-message: 'chore: Vocabulary vocab-${{ inputs.vocabulary_name }} release update'
        token: ${{ steps.generate_token.outputs.token }}
        delete-branch: true
        title: 'chore: Vocabulary vocab-${{ inputs.vocabulary_name }} release update'
        body: |
          Vocabulary update due to vocab-${{ inputs.vocabulary_name }} release [${{ inputs.release_version }}](${{ inputs.release_url }})
        base: 'jargon-pages'
        branch: create-pull-request/jargon-pages
        draft: true